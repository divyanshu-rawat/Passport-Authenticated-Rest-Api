{
  "name": "generaterr",
  "version": "1.5.0",
  "description": "A simple dependency free custom error generator for node.js",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/saintedlama/generaterr.git"
  },
  "author": {
    "name": "Christoph Walcher",
    "email": "christoph.walcher@gmail.com"
  },
  "license": "ISC",
  "keywords": [
    "error",
    "factory",
    "custom-error"
  ],
  "devDependencies": {
    "chai": "^3.5.0",
    "mocha": "^2.5.3",
    "shelljs": "^0.7.0"
  },
  "scripts": {
    "test": "mocha -R spec test/",
    "cover": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec"
  },
  "readme": "# Generaterr\n\nGenerates custom and valid node.js error functions for node.js.\n\n## Installation\n\n    npm install generaterr --save\n\n## Usage\n\n#### Basis Usage\n\n    var ParseError = generaterr('ParseError');\n\n    try\n    {\n      throw new ParseError('Could not parse file due to missing semicolons');\n    } catch(e) {\n      console.log(e.message);\n      console.log(e.name);\n      console.log(e.stack);\n    }\n\n#### Formatting messages\n\n    var ParseError = generaterr('ParseError');\n\n    try\n    {\n      throw new ParseError('Could not parse file \"%s\" due to missing semicolons at line %d:%d', 'input.js', 10, 12);\n    } catch(e) {\n      // Message: 'Could not parse file \"input.js\" due to missing semicolons at line 10:12'\n    }\n\n#### Generator Arguments\n\n    var NotFoundError = generaterr('NotFoundError', { status : 404 });\n\n    var notFoundError = new NotFoundError('Could find resource /api/random/numbers');\n\n    console.log(notFoundError.status);\n\n    // Prints '404'\n\n#### Constructor Arguments\n\n    var ParseError = generaterr('ParseError');\n\n    var err = new ParseError('Could not parse file \"%s\" due to missing semicolons at line %d:%d', 'input.js', 10, 12, { status : 'FATAL' });\n\n    console.log(err.message)\n    // Prints 'Could not parse file \"input.js\" due to missing semicolons at line 10:12'\n\n    console.log(err.status)\n    // Prints 'FATAL'\n\n## Options\n\n#### captureStackTrace, defaults to 'true'\nTurning off stack trace generation may be useful for business logic exceptions that do not require a stack trace.\n\n    var ParseError = generaterr('ParseError', null, { captureStackTrace : false });\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/saintedlama/generaterr/issues"
  },
  "_id": "generaterr@1.5.0",
  "dist": {
    "shasum": "8424c8631bab129fce543e4749a8e9139c98511e"
  },
  "_from": "generaterr@^1.2.0",
  "_resolved": "http://registry.npmjs.org/generaterr/-/generaterr-1.5.0.tgz"
}
