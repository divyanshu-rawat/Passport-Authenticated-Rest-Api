{
  "name": "passport-facebook",
  "version": "2.1.1",
  "description": "Facebook authentication strategy for Passport.",
  "keywords": [
    "passport",
    "facebook",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jaredhanson/passport-facebook.git"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/passport-facebook/issues"
  },
  "license": "MIT",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib",
  "dependencies": {
    "passport-oauth2": "1.x.x"
  },
  "devDependencies": {
    "make-node": "0.3.x",
    "mocha": "1.x.x",
    "chai": "2.x.x",
    "chai-passport-strategy": "1.x.x"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "scripts": {
    "test": "node_modules/.bin/mocha --require test/bootstrap/node test/*.test.js"
  },
  "readme": "# passport-facebook\n\n[![Build](https://img.shields.io/travis/jaredhanson/passport-facebook.svg)](https://travis-ci.org/jaredhanson/passport-facebook)\n[![Coverage](https://img.shields.io/coveralls/jaredhanson/passport-facebook.svg)](https://coveralls.io/r/jaredhanson/passport-facebook)\n[![Quality](https://img.shields.io/codeclimate/github/jaredhanson/passport-facebook.svg?label=quality)](https://codeclimate.com/github/jaredhanson/passport-facebook)\n[![Dependencies](https://img.shields.io/david/jaredhanson/passport-facebook.svg)](https://david-dm.org/jaredhanson/passport-facebook)\n\n\n[Passport](http://passportjs.org/) strategy for authenticating with [Facebook](http://www.facebook.com/)\nusing the OAuth 2.0 API.\n\nThis module lets you authenticate using Facebook in your Node.js applications.\nBy plugging into Passport, Facebook authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-facebook\n\n## Usage\n\n#### Create an Application\n\nBefore using `passport-facebook`, you must register an application with\nFacebook.  If you have not already done so, a new application can be created at\n[Facebook Developers](https://developers.facebook.com/).  Your application will\nbe issued an app ID and app secret, which need to be provided to the strategy.\nYou will also need to configure a redirect URI which matches the route in your\napplication.\n\n#### Configure Strategy\n\nThe Facebook authentication strategy authenticates users using a Facebook\naccount and OAuth 2.0 tokens.  The app ID and secret obtained when creating an\napplication are supplied as options when creating the strategy.  The strategy\nalso requires a `verify` callback, which receives the access token and optional\nrefresh token, as well as `profile` which contains the authenticated user's\nFacebook profile.  The `verify` callback must call `cb` providing a user to\ncomplete authentication.\n\n```js\npassport.use(new FacebookStrategy({\n    clientID: FACEBOOK_APP_ID,\n    clientSecret: FACEBOOK_APP_SECRET,\n    callbackURL: \"http://localhost:3000/auth/facebook/callback\"\n  },\n  function(accessToken, refreshToken, profile, cb) {\n    User.findOrCreate({ facebookId: profile.id }, function (err, user) {\n      return cb(err, user);\n    });\n  }\n));\n```\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'facebook'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n```js\napp.get('/auth/facebook',\n  passport.authenticate('facebook'));\n\napp.get('/auth/facebook/callback',\n  passport.authenticate('facebook', { failureRedirect: '/login' }),\n  function(req, res) {\n    // Successful authentication, redirect home.\n    res.redirect('/');\n  });\n```\n\n## Examples\n\nDevelopers using the popular [Express](http://expressjs.com/) web framework can\nrefer to an [example](https://github.com/passport/express-4.x-facebook-example)\nas a starting point for their own web applications.\n\n## FAQ\n\n##### How do I ask a user for additional permissions?\n\nIf you need additional permissions from the user, the permissions can be\nrequested via the `scope` option to `passport.authenticate()`.\n\n```js\napp.get('/auth/facebook',\n  passport.authenticate('facebook', { scope: ['user_friends', 'manage_pages'] }));\n```\n\nRefer to [permissions with Facebook Login](https://developers.facebook.com/docs/facebook-login/permissions/overview)\nfor further details.\n\n##### How do I re-ask for for declined permissions?\n\nSet the `authType` option to `rerequest` when authenticating.\n\n```js\napp.get('/auth/facebook',\n  passport.authenticate('facebook', { authType: 'rerequest', scope: ['user_friends', 'manage_pages'] }));\n```\n\nRefer to [re-asking for declined permissions](https://developers.facebook.com/docs/facebook-login/web#re-asking-declined-permissions)\nfor further details.\n\n##### How do I obtain a user profile with specific fields?\n\nThe Facebook profile contains a lot of information about a user.  By default,\nnot all the fields in a profile are returned.  The fields need by an application\ncan be indicated by setting the `profileFields` option.\n\n```js\nnew FacebookStrategy({\n  clientID: FACEBOOK_APP_ID,\n  clientSecret: FACEBOOK_APP_SECRET,\n  callbackURL: \"http://localhost:3000/auth/facebook/callback\",\n  profileFields: ['id', 'displayName', 'photos', 'email']\n}), ...)\n```\n\nRefer to the [User](https://developers.facebook.com/docs/graph-api/reference/v2.5/user)\nsection of the Graph API Reference for the complete set of available fields.\n\n##### How do I include app secret proof in API requests?\n\nSet the `enableProof` option when creating the strategy.\n\n```js\nnew FacebookStrategy({\n  clientID: FACEBOOK_APP_ID,\n  clientSecret: FACEBOOK_APP_SECRET,\n  callbackURL: \"http://localhost:3000/auth/facebook/callback\",\n  enableProof: true\n}, ...)\n```\n\nAs detailed in [securing graph API requests](https://developers.facebook.com/docs/graph-api/securing-requests#appsecret_proof),\nrequiring the app secret for server API requests helps prevent use of tokens\nstolen by malicous software or man in the middle attacks.\n\n##### Why is #\\_=\\_ appended to the redirect URI?\n\nThis behavior is \"by design\" according to Facebook's response to a [bug](https://developers.facebook.com/bugs/318390728250352)\nfiled regarding this issue.\n\nFragment identifiers are not supplied in requests made to a server, and as such\nthis strategy is not aware that this behavior is exhibited and is not affected\nby it.  If desired, this fragment can be removed on the client side.  Refer to\nthis [discussion](http://stackoverflow.com/questions/7131909/facebook-callback-appends-to-return-url) on\nStack Overflow for recommendations on how to accomplish such removal.\n\n\n## Contributing\n\n#### Tests\n\nThe test suite is located in the `test/` directory.  All new features are\nexpected to have corresponding test cases.  Ensure that the complete test suite\npasses by executing:\n\n```bash\n$ make test\n```\n\n#### Coverage\n\nThe test suite covers 100% of the code base.  All new feature development is\nexpected to maintain that level.  Coverage reports can be viewed by executing:\n\n```bash\n$ make test-cov\n$ make view-cov\n```\n\n## Support\n\n#### Funding\n\nThis software is provided to you as open source, free of charge.  The time and\neffort to develop and maintain this project is dedicated by [@jaredhanson](https://github.com/jaredhanson).\nIf you (or your employer) benefit from this project, please consider a financial\ncontribution.  Your contribution helps continue the efforts that produce this\nand other open source software.\n\nFunds are accepted via [PayPal](https://paypal.me/jaredhanson), [Venmo](https://venmo.com/jaredhanson),\nand [other](http://jaredhanson.net/pay) methods.  Any amount is appreciated.\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2016 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
  "readmeFilename": "README.md",
  "_id": "passport-facebook@2.1.1",
  "dist": {
    "shasum": "4a06a4d78a745b0d242f1a1121725472e268d337"
  },
  "_from": "passport-facebook@",
  "_resolved": "http://registry.npmjs.org/passport-facebook/-/passport-facebook-2.1.1.tgz"
}
